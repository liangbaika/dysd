<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ======= 数据源 配置开始 ========================================= -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="jdbc/beneform4j"/> -->

	<!-- c3p0连接池配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="beneform4j" />
		<property name="password" value="beneform4j" />
		<property name="driverClass" value="${beneform4j.db.driver}" />
		<property name="jdbcUrl" value="${beneform4j.db.url}" />

		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="20" />
		<!-- 连接池中保留的最小连接数，默认为：3 -->
		<property name="minPoolSize" value="2" />
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
		<property name="initialPoolSize" value="2" />
		<!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
		<property name="maxIdleTime" value="60"/>
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待新连接的时间，超时将抛出SQLException，0表示一直等待。单位毫秒。默认: 0 -->
		<property name="checkoutTimeout" value="3000" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
		<property name="acquireIncrement" value="2" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
		<property name="acquireRetryAttempts" value="0" />
		<!--重新尝试的时间间隔，默认为：1000毫秒 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->
		<property name="autoCommitOnClose" value="false"/>
	</bean>
	<!-- ======= 数据源 配置结束 ========================================= -->

	<!-- ======= Mybatis 配置开始 ========================================= -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactoryBeanName="sqlSessionFactory" p:basePackage="org.dysd"
		p:annotationClass="org.springframework.stereotype.Repository" />
		
	<!-- 自行构建Configuration对象 -->	
	<bean id="mybatisConfig" class="org.dysd.dao.mybatis.schema.SchemaConfiguration"/>
	<bean id="sqlSessionFactory" p:dataSource-ref="dataSource" p:configuration-ref="mybatisConfig"
		class="org.dysd.dao.mybatis.schema.SchemaSqlSessionFactoryBean">
		<!-- 自动扫描SqlMapper配置文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath*:**/*.sqlmapper.xml</value>
			</array>
		</property>
	</bean>
	<bean class="org.dysd.dao.mybatis.MybatisDaoTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="transactionManager" ref="txManager"/>
	</bean>
	<!-- ======= Mybatis 配置结束 ========================================= -->


	<!-- ======= 事务 配置开始 ========================================= -->
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 事务管理 -->
	<bean id="txManager" p:dataSource-ref="dataSource"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager" />
	<!-- ======= 事务 配置结束 ========================================= -->

</beans>
